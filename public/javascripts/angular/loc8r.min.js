(function(){
    
    angular.module('loc8rApp', ['ngRoute', 'ngSanitize', 'ui.bootstrap']);
    
    function config ($routeProvider, $locationProvider) {
        $routeProvider
            .when('/', {
                templateUrl: '/home/home.view.html',
                controller: 'homeCtrl',
                controllerAs: 'vm'
            })
            .when('/about', {
                templateUrl: '/common/views/genericText.view.html',
                controller: 'aboutCtrl',
                controllerAs: 'vm'
            })
            .when('/location/:locationid', {
                templateUrl: '/locationDetail/locationDetail.view.html',
                controller: 'locationDetailCtrl',
                controllerAs: 'vm'
            })
            .otherwise({redirectTo: '/'});

        $locationProvider.html5Mode({
            enabled: true,
            requireBase: false 
        });
    }
    
    angular
        .module('loc8rApp')
        .config(['$routeProvider', '$locationProvider', config]);  
})();(function(){

    homeCtrl.$inject = ['$scope', 'loc8rData', 'geolocation'];
    function homeCtrl ($scope, loc8rData, geolocation) {
        var vm = this;
        vm.pageHeader = {
            title: 'Loc8r',
            strapline: 'Find places to work with wifi near you!'
        };

        vm.sidebar = {
            content: "Looking for wifi and a seat etc etc"
        };

        vm.message = "Checking your location";
        
        vm.getData = function(position) {
            var lat = position.coords.latitude,
                lng = position.coords.longitude;
            vm.message = "Searching for nearby places";
            loc8rData
                .locationByCoords(lat, lng)
                .then(function(result) {
                        var data = result.data;
                        vm.message = data.length ? "" : "No locations found";
                        vm.data = { locations: data };
                    },function (e) {
                        vm.message = "Sorry, something's gone wrong ";
                        console.log(e);
                    });    
        }
        
        vm.showError = function (error) {
            $scope.$apply(function() {
                vm.message = error.message;
            });
        };

        vm.noGeo = function () {
            $scope.$apply(function() {
                vm.message = "Geolocation not supported by this browser.";
            });
        };
        
        geolocation.getPosition(vm.getData, vm.showError, vm.noGeo);
    }

    angular
        .module('loc8rApp')
        .controller('homeCtrl', homeCtrl);

    
    
})();
(function() {

    function aboutCtrl() {
        var vm = this;

        vm.pageHeader = {
            title: 'About Loc8r'
        }

        vm.main = {
            content: 'Loc8r was created to help people find places to sit down and get a bit of work done.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.'
        }
    }

    angular
        .module('loc8rApp')
        .controller('aboutCtrl', aboutCtrl);
})();(function() {
    angular
        .module('loc8rApp')
        .controller('locationDetailCtrl', locationDetailCtrl);

    locationDetailCtrl.$inject = ['$routeParams', '$uibModal', 'loc8rData'];
    function locationDetailCtrl($routeParams, $uibModal, loc8rData) {
        var vm = this;
        vm.locationid = $routeParams.locationid;                

        loc8rData.locationById(vm.locationid)
            .then(function(result) {
                vm.data = { location: result.data };
                vm.pageHeader = {
                    title: vm.data.location.name
                };
            },function (e) {
                vm.message = "Sorry, something's gone wrong ";
                console.log(e);
            });

        vm.popupReviewForm = function () {
            var modalInstance = $uibModal.open({
                templateUrl: '/reviewModal/reviewModal.view.html',
                controller: 'reviewModalCtrl as vm',
                resolve: {
                    locationData: function () {
                        return {
                            locationid: vm.locationid,
                            locationName: vm.data.location.name
                        };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                vm.data.location.reviews.push(result.data);
            });
        };
    }
})();(function() {

    reviewModalCtrl.$inject = ['$uibModalInstance', 'loc8rData', 'locationData'];
    function reviewModalCtrl($uibModalInstance, loc8rData, locationData) {
        var vm = this;
        vm.locationData = locationData;
        vm.modal = {
            close : function (result) {
                $uibModalInstance.close(result);
            },
            cancel: function() {
                $uibModalInstance.dismiss('cancel');
            }
        }

        vm.onSubmit = function () {
            vm.formError = "";
            if(!vm.formData.name || !vm.formData.rating || !vm.formData.reviewText) {
                vm.formError = "All fields required, please try again";
                return false;
            } else {
                vm.doAddReview(vm.locationData.locationid, vm.formData);
            }
        };

        vm.doAddReview = function(locationid, formData) {
            loc8rData.addReviewById(locationid, {
                    author: formData.name, 
                    rating: formData.rating, 
                    reviewText: formData.reviewText
                })
                .then(function(result){
                    vm.modal.close(result);
                }, function(e){
                    vm.formError = "Your review has not been saved, try again";
                });
            return false;
        };
    }

    angular
        .module('loc8rApp')
        .controller('reviewModalCtrl', reviewModalCtrl);
})();(function(){
    

    var geolocation = function() {
        var getPosition = function(cbSuccess, cbError, cbNoGeo) {
            if(navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(cbSuccess, cbError);
            } else {
                cbNoGeo();
            }
        }

        return {
            getPosition: getPosition
        }
    }

    angular
    .module('loc8rApp')
    .service('geolocation', geolocation);
})();(function(){

    loc8rData.$inject = ['$http'];
    function loc8rData ($http) {
        var locationByCoords = function (lat, lng) {
            return $http.get('/api/locations?lng=' + lng + '&lat=' + lat + '&maxDistance=20000');
        };

        var locationById = function(locationid) {
            return $http.get('/api/locations/' + locationid);
        }
        
        var addReviewById = function(locationid, data) {
            return $http.post('/api/locations/' + locationid + '/reviews', data);
        }

        return {
            locationByCoords : locationByCoords,
            locationById: locationById,
            addReviewById: addReviewById
        };
    }

    angular
        .module('loc8rApp')
        .service('loc8rData', loc8rData);
})();
(function () {

  angular
    .module('loc8rApp')
    .filter('formatDistance', formatDistance);

  var _isNumeric = function (n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  };

  function formatDistance () {
    return function (distance) {
      var numDistance, unit;
      if (distance && _isNumeric(distance)) {
          if (distance > 1) {
              numDistance = parseFloat(distance / 1000).toFixed(1);
              unit = 'km';
          } else {
              numDistance = parseInt(distance, 10);
              unit = 'm';
          }

          return numDistance + unit;
      } else {
          return "?";
      }
    };
  }


})();(function() {
    angular
        .module('loc8rApp')
        .filter('addHtmlLineBreaks', addHtmlLineBreaks);

    function addHtmlLineBreaks() {
        return function(text) {
            var output = text.replace(/\n/g, '<br/>');
            return output;
        };
    }
})();(function () {

  angular
    .module('loc8rApp')
    .directive('ratingStars', ratingStars);

  function ratingStars () {
    return {
      restrict: 'EA',
      scope: {
        thisRating : '=rating'
      },
      templateUrl: '/common/directives/ratingStars/ratingStars.template.html'
    };
  }


})();(function() {    
    function footerGeneric() {
        return {
            restrict: 'EA',
            templateUrl: '/common/directives/footerGeneric/footerGeneric.template.html '
        };
    }

    angular
        .module('loc8rApp')
        .directive('footerGeneric', footerGeneric);
})();(function() {
    angular
        .module('loc8rApp')
        .directive('navigation', navigation);

    function navigation() {
        return {
            restrict: 'EA',
            templateUrl: '/common/directives/navigation/navigation.template.html'
        };
    }
})();(function() {
    angular
        .module('loc8rApp')
        .directive('pageHeader', pageHeader);

    function pageHeader() {
        return {
            restrict: 'EA',
            scope: {
                content: '=content'
            },
            templateUrl: '/common/directives/pageHeader/pageHeader.template.html'
        };
    }
})();